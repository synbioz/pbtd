li data-id="#{project.id}"
  .project-infos
    h2= project.name
    .repo-settings title="options" data-action="#{edit_project_path(project)}" data-id="#{project.id}" âš™
    input.repo-url type="text" editable="false" value="#{project.repository_url}"
  - if project.locations.any?
    .environment-list
      - for location in project.locations do
        .environment data-id="#{location.id}"
          - if location.distance.present? && location.distance == 0
            .status data-state="updated"
          - elsif location.distance.present?
            .status data-state="behind"
          - else
            .status data-state="error"

          - disabled_class = location.distance.present? ? '' : 'disabled'
          = link_to 'Deploy', project_location_deploy_path(project, location_id: location.id), data: { action: 'deploy' }, remote: true, class: "button deploy-location #{disabled_class}"
          = link_to 'Update', project_location_update_distance_path(project, location_id: location.id), data: { action: 'update' }, remote: true, class: 'button update-repo'
          = link_to project_location_deployments_path(project, location_id: location.id), remote: true, class: 'show-deployments'
            h3= location.name
          .infos
            .last-update Branch <b>#{location.branch}</b> updated #{time_ago_in_words(location.updated_at)} ago
            - if location.distance.nil? && ( location.worker.present? && location.worker.error_message.present? )
              .version.error = location.worker.error_message
            - elsif location.distance.present? && location.distance > 0
              .version.late #{location.distance} commits from current branch
            - elsif location.distance.present? &&  location.distance == 0
              .version.updated Updated
            - else
              .tiny-loader


